AWSTemplateFormatVersion: 2010-09-09
Description: Verification Containers Deploy

Resources:
  DeployPipelineRole:
  ECSTaskExecutionRole:
  FargateVPC:
  AttachGateway:
  FargateRouteTable:
  FargateRoute:
  FargateSubnetAZ1:
  FargateSubnetAZ2:
  FargateALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: FargateALBSecurityGroup
      GroupDescription: For ALB SG
      SecurityGroupEgress:
         -
          CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
  FargateALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: FargateALBTargetGroup1
            Ref: FargateALBTargetGroup2
      LoadBalancerArn: !Ref FargateALB
      Port: 80
      Protocol: HTTP
  FargateALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: FargateALB
      Scheme: internet-facing
      SecurityGroups:
        Ref: FargateALBSecurityGroup
      SubnetMappings:
        SubnetId:
          - FargateSubnetAZ1
          - FargateSubnetAZ2
      Subnets:
        Ref: FargateSubnetAZ1
        Ref: FargateSubnetAZ2
      Type: application
  FargateALBTargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: VerificationTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId:
        Fn::Sub: ${ProductId}-VPC
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
  FargateALBTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: VerificationTargetGroup
      Port: 8080
      Protocol: HTTP
      VpcId:
        Fn::Sub: ${ProductId}-VPC
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
  FargateTaskDef:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Name: VerificationContainer
      Image: <IMAGE1_NAME>
      Family: VerificationContainer
      NetworkMode: awsvpc
      RequiresCompatibilities: FARGATE
      PortMapping:
        ContainerPort: 80
        HostPort: 80
        Protocol: tcp
  FargateCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: VerificationCluster
  FargateService:
    Type: AWS::ECS::Service
    Properties:
      TaskDefinition: !Ref FargateTaskDef
      Cluster: !Ref FargateCluster
      LoadBalanders:
        ContainerName: VerificationContainer
        ContainerPort: 80
        LoadBalancerName: !Ref FargateALB
        TargetGroupArn:
          Ref: VerificationTargetGroup1
          Ref: VerificationTargetGroup2
      DisiredCount: 2
      LaunchType: FARGATE
      DeploymentController:
          type: CODE_DEPLOY
  FargateCodeDeploy:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: CodeDeploy
      ComputePlatform: ECS
  CodeDeploy:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref FargateCodeDeploy
      DeploymentConfigName: AllAtOnce
      DeploymentGroupName: CodeDeployGroup
      DeploymentStyle:
        DeploymentType: BLUE_GREEN
      ServiceRoleArn: !Ref DeployPipelineRole

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore: !Ref ArtifactStoreBucket
      Name: Verification Containers Deploy
      RoleArn:
        - !Ref DeployPipelineRole
      Stages:
        Actions:
        - ActionTypeID:
            Category: Source
            Owner: AWS
            Provider: ECR
            Version: 1
          Configuration:
            RepositoryName: !Ref ECSImageRepository
          Name: ContainerImagefromECR
          OutputArtifacts:
            - ECRArtifact
          Region: ap-northeast-1
          RoleArn: !Ref DeployPipelineRole
          RunOrder: 1
        - ActionTypeID:
            Category: Source
            Owner: AWS
            Provider: S3
            Version: 1
          Configuration:
            key: value
          Name: BuildSourcefromS3
          OutputArtifacts:
            - SourceArtifact
          Region: ap-northeast-1
          RoleArn: !Ref DeployPipelineRole
          RunOrder: 1
        - ActionTypeID:
            Category: Deploy
            Owner: AWS
            Provider: ECS
            Version: 1
          InputArtifacts:
            - SourceArtifact
            - ECRArtifact
          Configuration:
            TaskDefinition: !Ref FargateTaskDef
            AppSpec: appspec.yml
          Name: DeoplytoFargate
          Region: ap-northeast-1
          RoleArn: !Ref DeployPipelineRole
          RunOrder: 2